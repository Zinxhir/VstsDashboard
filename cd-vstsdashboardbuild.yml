name: CD-GitHub-VstsDashboard-v$(date:yyMMdd)$(rev:.r)-$(Build.SourceBranchName)

pool:
  name: MacNetCorePools
workspace:
 clean: true

steps:
- task: UseNode@1
  displayName: 'Use Node 10.x'

- task: VersionExtractor@5
  name: build
  displayName: 'Version extractor digit'
  inputs:
    stringToAnalyze: '$(build.buildNumber)'

- task: replacetokens@3
  displayName: 'Replace tokens in **/values.yaml **/Chart.yaml'
  inputs:
    targetFiles: |
     **/values.yaml
     **/Chart.yaml
    keepToken: true
    tokenPrefix: '__'
    tokenSuffix: '__'

- task: Docker@2
  displayName: 'Push an image to Experta Container Registry'
  inputs:
    containerRegistry: 'docker-lturmel'
    repository: '$(Build.SourceBranchName).$(Build.Repository.Name)'
    Dockerfile: App/dockerfile
    buildContext: App
    tags: '$(build.fullVersion)'
  enabled: false

- task: Docker@2
  displayName: 'Push an image to Experta Container Registry (hub.docker.com)'
  inputs:
    containerRegistry: 'docker-lturmel'
    repository: lturmel/vstsdashboard
    Dockerfile: App/dockerfile
    buildContext: App
    tags: |
     $(Build.SourceBranchName)-$(build.fullVersion)
     $(Build.SourceBranchName)-latest
     latest

- task: CopyFiles@2
  displayName: 'Copy Configs'
  inputs:
    SourceFolder: Configs
    Contents: |
     **/*.yaml
     **/*.release.json
    TargetFolder: '$(build.artifactstagingdirectory)\Configs'

- task: CopyFiles@2
  displayName: 'Copy HelmChart'
  inputs:
    SourceFolder: HelmRelease
    Contents: '**/*'
    TargetFolder: '$(build.artifactstagingdirectory)\HelmRelease'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Configs Artifacts'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)\Configs'
    ArtifactName: Configs

- task: PublishBuildArtifacts@1
  displayName: 'Publish HelmRelease Artifacts'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)\HelmRelease'
    ArtifactName: HelmRelease

